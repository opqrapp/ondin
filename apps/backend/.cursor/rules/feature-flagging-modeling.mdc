---
description: Feature Flagging 시스템에서 사용하는 데이터와 엔티티에 대한 가이드
globs: 
alwaysApply: false
---
feature-flag-modeling

# Feature Flag 모델링 가이드

## 데이터 모델

Feature Flag 시스템은 다음과 같은 주요 엔티티로 구성됩니다:

1. **Project**: 여러 Feature Flag를 그룹화하는 최상위 개체
2. **Feature**: 기능 플래그 자체 (켜고 끌 수 있는 기능)
3. **Rule**: Feature에 적용되는 조건부 규칙
4. **Condition**: Rule을 구성하는 개별 조건
5. **Variation**: 조건이 충족될 때 적용되는 값 (boolean, string, number, json 등)

## JSON 표현 예시

제공된 예시와 같은 JSON 형식으로 Feature Flag를 표현할 수 있습니다:

```json
{
  "feature": "NewHomepage",
  "rules": [
    {
      "id": "rule1",
      "conditions": [
        { "key": "userGroup", "operator": "in", "values": ["beta_testers"] },
        { "key": "country", "operator": "equals", "value": "KR" }
      ],
      "variation": true
    },
    {
      "id": "rule2",
      "conditions": [
        { "key": "userId", "operator": "equals", "value": "12345" }
      ],
      "variation": true
    }
  ],
  "defaultVariation": false
}
```

## 성능 최적화 팁

1. **캐싱 활용**: Feature Flag 평가 결과를 캐싱하여 빈번한 데이터베이스 접근을 줄입니다.
2. **실시간 업데이트**: PubSub 또는 웹소켓을 활용하여 Feature Flag 변경 시 실시간으로 클라이언트에 업데이트합니다.
3. **배치 로딩**: 여러 Feature Flag가 필요한 경우 일괄 로딩하여 데이터베이스 쿼리 수를 최소화합니다.
4. **인덱스 최적화**: 자주 사용되는 쿼리에 대해 적절한 인덱스를 설정합니다.

